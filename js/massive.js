//! split(s) — дозволяє перетворити рядок в масив, розбивши її по розподілу s. Це не метод масиву, але розглядаємо ми його зараз так, як раніше про масиви не знали.

//! join(s) — робить в точності протилежне split. Він бере масив і склеює його в рядок, використовуючи s як роздільник.

//! array.indexOf(x) — повертає перший індекс, в якому елемент x був знайдений в масиві, або число -1, 
// !якщо такого елемента немає. Використовуйте indexOf тоді, коли необхідно отримати безпосередньо індекс елемента.

//! array.includes(x) — визначає, чи містить масив деякий елемент x, повертаючи true або false відповідно.
// ! Використовуйте includes тоді, коли необхідно перевірити, чи є елемент в масиві і не важливий його порядковий номер.

// !shift() — видаляє елемент з початку масиву і повертає його (елемента) значення.
// !unshift() — додає елемент в початок масиву

// !Slice() дозволяє отримувати елементи підмножини масиву і додавати їх в новий масив.
// ! У більшості випадків використовується для створення копії частини або цілого вихідного масиву

// ! Метод splice() - швейцарський ніж для роботи з масивами, в тому випадку, якщо вихідний масив необхідно змінити.
//  ! Дозволяє видаляти, додавати і замінювати елементи в довільному місці масиву

//! Щоб видалити елементи з масиву
//! splice(position, num)

//! position - вказувати позицію (індекс) першиго елемента для видалення
//! num - кількість видаляючихся елементів


// Створити масив із п'яти чисел. Використовуючи метод indexOf(), знайти індекс елемента зі значенням 3.


const arr2 = [2, 4, 5, 6, 1, 3, 5, 6, 43, 1];
const arrNew = arr2.slice(0, 5)
console.log(arrNew);

// Створити масив із п'яти стрічок. Використовуючи метод join(), створити одну стрічку, яка буде містити всі елементи масиву, розділені комою.


// Робимо slug в URL з назви стратті. Заголовок статті складається тільки з букв та пропусків
// - Нормалізуємо рядок
// - Разбиваємо по словах
// - Зшиваємо в рядок з розділителями
// - Ченінг
// // Повинно вийти top-10-benefits-of-react-framework
const title = 'Top 10 benefits of React framework



// Напиши скрипт який рахує суму елементів двух масивів.
const num1 = [4, 5, 67, 8, 6, 1];
const num2 = [2, 4, 6, 1, 1, 55];

const arrAll = num1.concat(num2);

let sum = 0;

for (let i = 0; i < arrAll.length; i++) {
sum += arrAll[i]
}

console.log(sum);

// Розбити цю строку по буквам в масив, вивести цей масив в консоль. Також вивести в консоль індекс
//  літери l (Л англійська маленька) за допомогою вбудованого метода. Після цього елементи масива поєднати в строку і вивести строку в консоль.

const message = "Welcome to Ukraine!";

// Створити масив гравців. додати до кожного гравця -N, де n - це порядковий номер.
// Наприклад, “Poly” => “Poly-1”


/ Створити масив з трьох чисел. Змінити значення другого елемента масиву на 10.
const numbers = [2, 4, 7];
numbers[1] = 10;
console.log(numbers);
// Створити масив із трьох рядків. Додати до масиву ще одну рядків.
const myString = ["My", "name", "is"];
myString.push("Kate");
console.log(myString);
// Створити скрипт який поверне суму всіх чисел в масиві.
// const counter = [1, 2, 5, 7, 8];
// let sum = 0;
// for (let i = 0; i < counter.length; i++) {
//   sum += counter[i];
// }
// console.log(sum);
// Створити масив з 5-ти чисел. Вивести на екран всі елементи масиву за допомогою циклу for.
const list = [1, 3, 6, 12, 78];
for (let i = 0; i < list.length; i++) {
  console.log(list[i]);
}
// Створити масив із 5-ти рядків. Вивести на екран кожен рядок з масиву, який містить більше 5-ти символів.
const myArray = [ "nut", "coconut", "banana", "apple"];
for (let i = 0; i < myArray.length; i++){
    if (myArray[i].length > 5) {
        console.log(myArray[i]);
    }
    else {
        console.log("Error");
    }
}
// Створити масив з 10-ти чисел. Знайти та вивести на екран максимальне значення з масиву.
// Створити масив з 10-ти чисел. Знайти всі парні числа в масиві та вивести їх на екран.
// const array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// for (let i = 0; i < array.length; i++) {
//   if (i % 2 !== 0) {
//     console.log(array[i]);
//   } else {
//     console.log("error");
//   }
// }